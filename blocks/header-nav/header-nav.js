(()=>{"use strict";var e,t={357:(e,t,r)=>{var n=r(540),o=r(338);const a=({elem:e})=>{const t=((e,t=window)=>r=>{const n=new CustomEvent(e,{detail:r});t.dispatchEvent(n)})("userLoggedIn");return n.createElement(n.Fragment,null,n.createElement("h1",null,"New Component is Here."),n.createElement("button",{onClick:()=>{t({message:"john_doe"})}},"Login"))};((e,t)=>{const r=document.querySelectorAll(e,t);r.length?r.forEach((e=>t(e))):((e,t)=>{const r=new MutationObserver((()=>{const n=document.querySelector(e);n&&(r.disconnect(),t(n))}));r.observe(document.body,{childList:!0,subtree:!0})})(e,t)})(".header-nav",(e=>{if(e){const t=e;(0,o.H)(t).render(n.createElement(a,{elem:t})),t.dataset.reactStatus="loaded"}}))}},r={};function n(e){var o=r[e];if(void 0!==o)return o.exports;var a=r[e]={exports:{}};return t[e](a,a.exports,n),a.exports}n.m=t,e=[],n.O=(t,r,o,a)=>{if(!r){var l=1/0;for(d=0;d<e.length;d++){for(var[r,o,a]=e[d],s=!0,c=0;c<r.length;c++)(!1&a||l>=a)&&Object.keys(n.O).every((e=>n.O[e](r[c])))?r.splice(c--,1):(s=!1,a<l&&(l=a));if(s){e.splice(d--,1);var i=o();void 0!==i&&(t=i)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[r,o,a]},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={"header-nav":0};n.O.j=t=>0===e[t];var t=(t,r)=>{var o,a,[l,s,c]=r,i=0;if(l.some((t=>0!==e[t]))){for(o in s)n.o(s,o)&&(n.m[o]=s[o]);if(c)var d=c(n)}for(t&&t(r);i<l.length;i++)a=l[i],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(d)},r=self.webpackChunk_adobe_aem_boilerplate=self.webpackChunk_adobe_aem_boilerplate||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var o=n.O(void 0,["vendor"],(()=>n(357)));o=n.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,